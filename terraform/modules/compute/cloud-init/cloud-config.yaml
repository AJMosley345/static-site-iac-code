#cloud-config
# Creates the user ansible for configuration with ansible playbooks
users:
- name: ansible
  groups: users, admin
  sudo: ALL=(ALL) NOPASSWD:ALL
  shell: /bin/bash
  ssh_authorized_keys:
    - ${ansible_user_ssh_key}

# Writes the ssh hardening config to a separate file for better management
write_files:
  - path: /etc/ssh/sshd_config.d/hardening.conf
    content: |
      PermitRootLogin no
      PasswordAuthentication no
      KbdInteractiveAuthentication no
      ChallengeResponseAuthentication no
      MaxAuthTries 2
      AllowTcpForwarding no
      X11Forwarding no
      AllowAgentForwarding no
      AuthorizedKeysFile .ssh/authorized_keys
      AllowUsers ${personal_user} ansible
packages:
  - jq
runcmd:
  - curl -fsSL https://tailscale.com/install.sh | sh
  - tailscale up --auth-key=${tailscale_tailnet_key} --ssh
  # Get current IP of Tailscale and potential "old" IP
  - TAILSCALE_IP=$(tailscale ip -4)
  - OLD_TAILSCALE_IP=$(tailscale ip -4 ${server_name})
  # Get the Tailscale device id of the newly created device so the properties can be updated. Also get the "old/outdated" id
  - TAILSCALE_DEVICE_ID=$(tailscale whois --json $${TAILSCALE_IP}:22 | jq -r .Node.StableID)
  - OLD_TAILSCALE_DEVICE_ID=$(tailscale whois --json $${OLD_TAILSCALE_IP}:22 | jq -r .Node.StableID)
  # Do a check to compare the values and delete the old server
  - >
    if [[ "$TAILSCALE_DEVICE_ID" != "$OLD_TAILSCALE_DEVICE_ID" ]]; then
      echo "Device ID mismatch detected. Sending delete command to Tailscale for the old device."
      curl -X DELETE -H 'Authorization: Bearer ${tailscale_api_token}' "https://api.tailscale.com/api/v2/device/$${OLD_TAILSCALE_DEVICE_ID}"
      curl \
        -X POST \
        -H 'Authorization: Bearer ${tailscale_api_token}' \
        -H 'Content-Type: application/json' \
        "https://api.tailscale.com/api/v2/device/$${TAILSCALE_DEVICE_ID}/name" \
        -d '{"name": "${server_name}"}'
    else
      echo "Device IDs match. No action needed."
    fi
  # Set the new device to have a static ip (defined in the Terraform variables) so that ansible finds the correct host.
  - >
    curl \
      -X POST \
      -H 'Authorization: Bearer ${tailscale_api_token}' \
      -H 'Content-Type: application/json' \
      "https://api.tailscale.com/api/v2/device/$${TAILSCALE_DEVICE_ID}/ip" \
      -d '{"ipv4": "${tailscale_static_ip}"}'
#   - >
#     curl -L \
#       -X POST \
#       -H "Accept: application/vnd.github+json" \
#       -H "Authorization: Bearer ${github_pa_token}" \
#       -H "X-GitHub-Api-Version: 2022-11-28" \
#       https://api.github.com/repos/${repo_name}/actions/workflows/${workflow_id}/dispatches \
#       -d '{"ref": "main"}'