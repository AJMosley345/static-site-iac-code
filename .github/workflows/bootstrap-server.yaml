name: Bootstrap Cloud Server

on:
  workflow_dispatch:
  repository_dispatch:
    types: [cloud_server_startup]

jobs:
  bootstrap:
    name: Bootstrap Server
    runs-on: ubuntu-latest

    steps:
      - name: Connect to Tailscale network to allow access to server
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
          tags: tag:ansible
      
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get contents of ansible.cfg to feed to ansible playbook step
        id: ansible_config
        uses: satya-500/read-file-github-action@v1.0.0
        with:
          path: ./hetzner_ansible/ansible.cfg
      
      - name: Set up Python environment, install requirements for playbooks and add ansible to PATH
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
      - run: |
          pip install -r requirements.txt
          echo "$(python -m site --user-base)/bin" >> $GITHUB_PATH

      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        env:
          HETZNER_API_TOKEN: ${{ secrets.HETZNER_API_TOKEN }}
        with:
          # Required, playbook filepath
          playbook: playbooks/bootstrap-server.yml
          # Optional, directory where playbooks live
          directory: ./hetzner_ansible
          # Optional, ansible configuration file content (ansible.cfg)
          configuration: '${{ steps.ansible_config.outputs.contents }}'
          # Optional, SSH private key
          key: ${{ secrets.ANSIBLE_USER_SSH_PRIVATE_KEY }}
          # Optional, literal inventory file contents
          # inventory:
          # Optional, SSH known hosts file content
          # known_hosts:
          # Optional, encrypted vault password
          vault_password: ${{secrets.ANSIBLE_VAULT_PASSWORD}}
          # Optional, galaxy requirements filepath
          requirements: requirements.yml
          # Optional, additional flags to pass to ansible-playbook
          options: |
              --verbose


      - name: Pull latest version of site down once Ansible setup is complete
        run: |
          # Set required variables
          repo_owner="${{ github.repository_owner }}"
          repo_name="${{ vars.WEBSITE_REPO_NAME }}"
          event_type="latest-website"

          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.WEBSITE_WEBHOOK_PAT }}" \
            https://api.github.com/repos/$repo_owner/$repo_name/dispatches \
            -d "{\"event_type\": \"$event_type\"}"