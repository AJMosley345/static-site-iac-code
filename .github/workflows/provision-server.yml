name: 'Provision Hetzner server, set nameservers in Porkbun and create DNS records in Cloudflare'

on:
  workflow_dispatch:

env:
  TF_CLOUD_ORGANIZATION: ${{ env.TF_CLOUD_ORGANIZATION }}
  TF_API_TOKE: ${{ secrets.TF_API_TOKEN }}
  TF_WORKSPACE: ${{ env.TF_WORKSPACE }}
  CONFIG_DIRECTORY: ""./terraform"

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
    
    # Uploads the Terraform configuration to HCP Terraform and marks it as speculative so it cannot modify infrastructure.
    - name: Upload Configuration
      uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
      id: plan-upload
      with:
        workspace: ${{ env.TF_WORKSPACE }}
        directory: ${{ env.CONFIG_DIRECTORY }}
        speculative: true

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      env:
        TF_VAR_hcp_sp_client_id: ${{ secrets.HCP_SP_CLIENT_ID }}
        TF_VAR_hcp_sp_client_secret: ${{ secrets.HCP_SP_CLIENT_SECRET }}
        TF_VAR_repo_name: ${{ env.REPO_NAME }}
        TF_VAR_domain: ${{ env.DOMAIN_NAME }}
      run: |
       terraform plan -input=false

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
    #   run: terraform apply -auto-approve -input=false
